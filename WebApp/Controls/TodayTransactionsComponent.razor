@inject UseCases.UseCaseInterfaces.IGetTodayTransactionsUseCase GetTodayTransactionsUseCase

@if (transactions != null)
{
    <table class="table">
        <thead>
            <tr>
                <th>Nombre del Cajero(a)</th>
                <th>Nombre del Producto</th>
                <th>Fecha y Hora</th>
                <th>Cantidad Antes</th>
                <th>Cantidad Vendida</th>
                <th>Cantidad Después</th>
                <th>Vendido AMT</th>
            </tr>
        </thead>
        <tbody>
            @foreach(var tran in transactions)
            {
                <tr>
                    <td>@tran.CashierName</td>
                    <td>@tran.ProductName</td>
                    <td>@tran.TimeStamp.ToString("dd/MM hh:mm")</td>
                    <td>@tran.BeforeQuantity</td>
                    <td>@tran.SoldQuantity</td>
                    <td>@(tran.BeforeQuantity - tran.SoldQuantity)</td>
                    <td>@(string.Format("{0:c}", tran.SoldQuantity * tran.Price))</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<Transaction> transactions;

    public void LoadTransactions(string cashierName)
    {
        transactions = GetTodayTransactionsUseCase.Execute(cashierName);
        StateHasChanged();
    }
}